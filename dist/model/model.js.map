{"version":3,"names":[],"mappings":"","sources":["model/model.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ORM = require(\"sequelize\");\nvar dotenv = require(\"dotenv\");\nvar _ = require(\"lodash\");\nvar sql_logging_options_1 = require(\"./sql-logging-options\");\nvar create_logger_1 = require(\"../common/create-logger\");\nvar handle_model_error_1 = require(\"./handle-model-error\");\nvar init_address_1 = require(\"./init-address\");\nvar test_address_1 = require(\"./initialize/test-address\");\nvar init_person_1 = require(\"./init-person\");\nvar test_people_1 = require(\"./initialize/test-people\");\nvar init_classes_1 = require(\"./init-classes\");\nvar test_classes_1 = require(\"./initialize/test-classes\");\ndotenv.config();\nvar log = create_logger_1.createLogger('downdog-db');\nvar dbUrl = process.env.DATABASE_URL || 'postgres://postgres:postgres@localhost:5432/downdog-test';\nvar sequelize = new ORM(dbUrl, sql_logging_options_1.loggingOptions);\nexports.Addresses = init_address_1.initAddress(sequelize);\nexports.People = init_person_1.initPerson(sequelize);\nexports.Classes = init_classes_1.initClasses(sequelize);\nexports.People.hasMany(exports.Addresses, { as: 'address' });\n// if ( !dbUrl.endsWith('-test')) {\n//   sequelize.sync()\n//     .then( () => {\n//       log.debug( 'synced!');\n//     })\n//     .catch( _.partial( handleModelError, 'ERR-MODEL-SYNC') );\n// } else {\nlog.info('begin db initialization');\nsequelize.sync({ force: true, match: /-test$/ })\n    .then(function () {\n    return test_address_1.testAddress();\n})\n    .then(function () {\n    return test_people_1.testPeople();\n})\n    .then(function () {\n    return test_classes_1.testClasses();\n})\n    .then(function () {\n    log.info('complete db initialization');\n})\n    .catch(_.partial(handle_model_error_1.handleModelError, 'ERR-MODEL-TEST-SYNC'));\n// }\n"],"file":"model.js"}